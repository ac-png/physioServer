// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using FlexiCareManager.Data;

#nullable disable

namespace FlexiCareManager.Migrations
{
    [DbContext(typeof(FlexiCareManagerContext))]
    [Migration("20250416113838_AddPendingChanges")]
    partial class AddPendingChanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("FlexiCareManager.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PatientId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PhysioId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("When")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.HasIndex("PhysioId");

                    b.ToTable("Appointment");
                });

            modelBuilder.Entity("FlexiCareManager.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExerciseCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseCategoryId");

                    b.ToTable("Exercise");
                });

            modelBuilder.Entity("FlexiCareManager.Models.ExerciseCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ExerciseCategory");
                });

            modelBuilder.Entity("FlexiCareManager.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Patient");
                });

            modelBuilder.Entity("FlexiCareManager.Models.PatientProgramme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("PatientId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProgrammeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.HasIndex("ProgrammeId");

                    b.ToTable("PatientProgramme");
                });

            modelBuilder.Entity("FlexiCareManager.Models.Physio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Physio");
                });

            modelBuilder.Entity("FlexiCareManager.Models.Programme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Programme");
                });

            modelBuilder.Entity("FlexiCareManager.Models.ProgrammeExercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Day")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProgrammeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("ProgrammeId");

                    b.ToTable("ProgrammeExercise");
                });

            modelBuilder.Entity("FlexiCareManager.Models.ProgrammeTreatment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProgrammeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TreatmentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProgrammeId");

                    b.HasIndex("TreatmentId");

                    b.ToTable("ProgrammeTreatment");
                });

            modelBuilder.Entity("FlexiCareManager.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Done")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExerciseCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ExerciseDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PatientId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProgrammeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseCategoryId");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("PatientId");

                    b.HasIndex("ProgrammeId");

                    b.ToTable("Session");
                });

            modelBuilder.Entity("FlexiCareManager.Models.Treatment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Subtitle")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Treatment");
                });

            modelBuilder.Entity("FlexiCareManager.Models.Appointment", b =>
                {
                    b.HasOne("FlexiCareManager.Models.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlexiCareManager.Models.Physio", "Physio")
                        .WithMany()
                        .HasForeignKey("PhysioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");

                    b.Navigation("Physio");
                });

            modelBuilder.Entity("FlexiCareManager.Models.Exercise", b =>
                {
                    b.HasOne("FlexiCareManager.Models.ExerciseCategory", "ExerciseCategory")
                        .WithMany()
                        .HasForeignKey("ExerciseCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExerciseCategory");
                });

            modelBuilder.Entity("FlexiCareManager.Models.PatientProgramme", b =>
                {
                    b.HasOne("FlexiCareManager.Models.Patient", "Patient")
                        .WithMany("Programmes")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlexiCareManager.Models.Programme", "Programme")
                        .WithMany()
                        .HasForeignKey("ProgrammeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");

                    b.Navigation("Programme");
                });

            modelBuilder.Entity("FlexiCareManager.Models.ProgrammeExercise", b =>
                {
                    b.HasOne("FlexiCareManager.Models.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlexiCareManager.Models.Programme", "Programme")
                        .WithMany("Exercises")
                        .HasForeignKey("ProgrammeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Programme");
                });

            modelBuilder.Entity("FlexiCareManager.Models.ProgrammeTreatment", b =>
                {
                    b.HasOne("FlexiCareManager.Models.Programme", "Programme")
                        .WithMany("Treatments")
                        .HasForeignKey("ProgrammeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlexiCareManager.Models.Treatment", "Treatment")
                        .WithMany()
                        .HasForeignKey("TreatmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programme");

                    b.Navigation("Treatment");
                });

            modelBuilder.Entity("FlexiCareManager.Models.Session", b =>
                {
                    b.HasOne("FlexiCareManager.Models.ExerciseCategory", "ExerciseCategory")
                        .WithMany()
                        .HasForeignKey("ExerciseCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlexiCareManager.Models.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlexiCareManager.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlexiCareManager.Models.Programme", "Programme")
                        .WithMany()
                        .HasForeignKey("ProgrammeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("ExerciseCategory");

                    b.Navigation("Patient");

                    b.Navigation("Programme");
                });

            modelBuilder.Entity("FlexiCareManager.Models.Patient", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Programmes");
                });

            modelBuilder.Entity("FlexiCareManager.Models.Programme", b =>
                {
                    b.Navigation("Exercises");

                    b.Navigation("Treatments");
                });
#pragma warning restore 612, 618
        }
    }
}
